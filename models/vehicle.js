module.exports = (sequelize, DataTypes) => {
    const CEOS = sequelize.define(
        "vehicle",
        {
            id: {
                type: DataTypes.BIGINT,
                primaryKey: true,
                autoIncrement: true,
            },
            division_no: {
                type: DataTypes.STRING(20),
            },
            note_id:  DataTypes.STRING(50),
            province_no: DataTypes.STRING(20),
            licence_no: DataTypes.STRING(50),
            owner_name: DataTypes.STRING(100),
            tenant_name: DataTypes.STRING(100),
            province_code: DataTypes.STRING(10),
            district_code: DataTypes.STRING(10),
            steering_id: DataTypes.INTEGER(11),
            vehicle_type_id: DataTypes.INTEGER(11),
            color_id: DataTypes.INTEGER(11),
            year_manufacture: DataTypes.STRING(20),
            height: DataTypes.STRING(20),
            long: DataTypes.STRING(10),
            gas_id: DataTypes.INTEGER(11),
            wheels: DataTypes.STRING(10),
            engine_no: DataTypes.STRING(40),
            chassis_no:  DataTypes.STRING(40),
            weight: DataTypes.STRING(10),
            import_permit_no: DataTypes.STRING(50),
            import_permit_date: DataTypes.STRING(25),
            industrial_doc_no: DataTypes.STRING(50),
            industrial_doc_date: DataTypes.STRING(25),
            technical_doc_no: DataTypes.STRING(50),
            total_weight: DataTypes.STRING(10),
            technical_doc_date: DataTypes.STRING(25),
            width: DataTypes.STRING(10),
            brand_id: DataTypes.INTEGER(11),
            model_id: DataTypes.INTEGER(11),
            comerce_permit_no: DataTypes.STRING(20),
            comerce_permit_date: DataTypes.STRING(25),
            tax_no: DataTypes.STRING(50),
            tax_date: DataTypes.STRING(25),
            tax_payment_no: DataTypes.STRING(100),
            tax_payment_date: DataTypes.STRING(25),
            police_doc_no: DataTypes.STRING(10),
            police_doc_date: DataTypes.STRING(25),
            remark: DataTypes.TEXT,
            deleted_at: DataTypes.STRING(25),
            created_at: DataTypes.STRING(25),
            updated_at: DataTypes.STRING(25),
            user_id: DataTypes.INTEGER(11),
            seat: DataTypes.STRING(10),
            view: DataTypes.TINYINT(2),
            tax_10_40: DataTypes.TINYINT(2),
            tax_exam: DataTypes.TINYINT(2),
            tax_12: DataTypes.TINYINT(2),
            tax_50: DataTypes.TINYINT(2),
            import_permit_hsny: { type: DataTypes.TINYINT(2), defaultValue: 0 },
            import_permit_invest: { type: DataTypes.TINYINT(2), defaultValue: 0 },
            tax_receipt: { type: DataTypes.STRING(5), defaultValue: 0 },
            issue_date: { type: DataTypes.STRING(25), defaultValue: null },
            expire_date: { type: DataTypes.STRING(25), defaultValue: null },
            tax_permit: { type: DataTypes.STRING(5), defaultValue: 0 },
            reg_complete: { type: DataTypes.STRING(5), defaultValue: 0 },
            vehicle_kind_code: { type: DataTypes.STRING(5), defaultValue: null },
            motor_brand_id: { type: DataTypes.INTEGER(5), defaultValue: null },
            locks: { type: DataTypes.TINYINT(1), defaultValue: 0 },
            lock_no: { type: DataTypes.STRING(50), defaultValue: null },
            startlock: { type: DataTypes.STRING(25), defaultValue: null },
            endlock: { type: DataTypes.STRING(25), defaultValue: null },
            companylock: { type: DataTypes.STRING(255), defaultValue: null },
            cylinder: { type: DataTypes.STRING(10), defaultValue: null },
            cc: { type: DataTypes.STRING(10), defaultValue: null },
            weight_filled: { type: DataTypes.STRING(10), defaultValue: null },
            axis: { type: DataTypes.STRING(10), defaultValue: null },
            location: { type: DataTypes.STRING(100), defaultValue: null },
            engine_type_id: { type: DataTypes.INTEGER(10), defaultValue: null },
            card_serial_no: { type: DataTypes.STRING(50), defaultValue: null },
            inspect_place_id: { type: DataTypes.INTEGER(10), defaultValue: null },
            inspect_result: { type: DataTypes.ENUM(['pass','not_pass','none']), defaultValue: null },
            inspect_issue_date: { type: DataTypes.STRING(25), defaultValue: null },
            inspect_expire_date: { type: DataTypes.STRING(25), defaultValue: null },
            vdvd_card: { type: DataTypes.STRING(100), defaultValue: null },
            commerce_permit: { type: DataTypes.STRING(30), defaultValue: null },
            deleted: { type: DataTypes.TINYINT(2), defaultValue: 0 },
            issue_place: { type: DataTypes.STRING(100), defaultValue: null },
            owner_lastname: { type: DataTypes.STRING(100), defaultValue: null },
            // log: { type: DataTypes.TEXT, defaultValue: null },
            special_date: { type: DataTypes.STRING(50), defaultValue: null },
            special_remark: { type: DataTypes.TEXT, defaultValue: null },
            special: { type: DataTypes.STRING(225), defaultValue: null },
            tax: { type: DataTypes.STRING(10), defaultValue: null },
            technicalcheck: { type: DataTypes.STRING(10), defaultValue: null },
            tnic_date: { type: DataTypes.STRING(25), defaultValue: null },
            tnic_expire_date: { type: DataTypes.STRING(25), defaultValue: null },//
            tnic_result: { type: DataTypes.STRING(50), defaultValue: null },//
            vehicle_send: { type: DataTypes.STRING(50), defaultValue: null },
            vehicle_unit: { type: DataTypes.STRING(10), defaultValue: null },
            transfer_no: { type: DataTypes.STRING(20), defaultValue: null },
            number: { type: DataTypes.STRING(100), defaultValue: null },
            vehicle_units: { type: DataTypes.STRING(10), defaultValue: null },
            vehicle_phone: { type: DataTypes.STRING(20), defaultValue: null },
            vehicle_predictor: { type: DataTypes.STRING(20), defaultValue: null },
            vehicle_fax: { type: DataTypes.STRING(20), defaultValue: null },
            vehicle_activation: { type: DataTypes.STRING(20), defaultValue: null },
            pre_licence_no: { type: DataTypes.STRING(20), defaultValue: null },
            village_id: { type: DataTypes.INTEGER(10), defaultValue: null },
            village_code: { type: DataTypes.STRING(10), defaultValue: null },
            country_id: { type: DataTypes.INTEGER(11), defaultValue: null },
            datetime_update: { type: DataTypes.STRING(25), defaultValue: null },
            quick_id_solr: { type: DataTypes.STRING(20), defaultValue: null }
            
        },
        {
            indexes: [
             {
                unique: false,
                fields: ['note_id','chassis_no']
             }
            ]
        }
    );
    return CEOS;
};